<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zzEy49ZyFLq35Dsa53jFE+fw63Tl2nWTmoqaFgQAaL+qfWKjtWLCAifG0SGN/8maZj3Sq2tjUwHAEC3S
        KuQZe0QzK8fo2RBxjXNcrGdHXO2Jc9yroMnHOZ7zxDlKofy8Q6Z05jBUa3ldIwBA5S/dZXpYHwCwNBtK
        VP+t0YaZrmxrvtSkc6t0Yc4IXbWXj3Mc6Sk/P0NPqfqqnlp1g+6B8WeNc6zylJ+/5EnLFivO8b6uNLQ6
        itRmAAAqdwDcl3VPf+r8nfcEmqwtU20rWespOQ91j3H0ZOpiTpJKBWNVZroif6PZQHWUxjkiWn6ej3Ms
        0ZTs7bompS8Q+OUamSKlizQNAACo4gBQqHL1trWu1k3Brp3UaK2a6E5d8mdh7A0aOsIwqdZsHwCwPBOx
        DyxWOhAAIADQ38HRcIsM2VtdQLh7FS7S2EIh17NFC78AAAIAfgBAXuZgFXf3YnuAlnQXcj2v6i5DAAAB
        AD8BwGlwXVOCSwq8nrd0kRkAQADAbwBId8UJzitw3cUOLdsGAAgA+A0AnlEAANByTwCAAAAAQAgAAACE
        AAAAQAgAAAAEAAAAAEAAAAAAAAQAAAAAQAAAAAAABAAAAABAAAAAAAAEAAAAAEAAAAAAAAQAAAAAQAAA
        AAAABAAAAABAAAAAAAAEAAAAAEAAAAAAAAQAAAAAQAAAAAAABAAAAABAAAAAAAAEAAAAAEAAAAAAAAQA
        AAAAQAAAAAAABAAAAABAAAAAAAAEAAAAAEAAAAAAAAQAAAAAQAAAAAAABAAAAABAAAAAAAAEAAAAAEAA
        AAAAAAQAAAAAQAAAACAEAAAAQgAAACAEAAAAAgAAAAAgAAAAAAACAAAAACAAAAAAAAIAAAAAIAAAAAAA
        AgAAAAAgAAAAAAACAAAAACAAAAAAAAIAAAAAIAAAAAAAAgAAAAAgAAAAAAACAAAAACAAAAAAAAIAAAAA
        IAAAAAAAAgAAAAAgAAAAAAACAAAAACAAAAAAAAIAAAAAIAAAAAAAAgAAAAAgAAAAAAACAAAAACAAAAAA
        AAIAAAAAIAAAAAAAAgAAAAAgAAAAAAACAAAAACAAAAAQAgAAACEAAAAQAgAAAAEAAAAAEAAAAAAAAQAA
        AAAQAAAAAAABAAAAABAAAAAAAAEAAAAAEAAAAAAAAQAAAAAQAAAAAAABAAAAABAAAAAAAAEAAAAAEAAA
        AAAAAQAAAAAQAAAAAAABAAAAABAAAAAAAAEAAAAAEAAAAAAAAQAAAAAQAAAAAAABAAAAABAAAACFAuAO
        AIAqCQDpUKwsAfB0gT98TyZsDxLzpKOKAEDGbfzG/1jg9bwlPrnUAJAs8IdT4vHmYpKROE87KmsAZMIx
        Ky2dXUd0sWkz1xV4Pa+Ljy81ABT64bwrPj8nF5MOx+UGAQFUngAwQ/9cxGn45nrC8pop8HqeFzeUGgB+
        XuAPG2fFM7MuFXGZO9PLB7cIAFiaDSWqDQBK4x7YY+T1t31oL6vkWg4q6vW4be+avgDgAu3NC70oE0O4
        TPxpubCjM+HEDFx+ls92YiZcEACGy7OxrMBna7n8mydk9u9zdbT8HceJzxL/b4HBv7wfkN93XBGvx/ye
        o+T33tIXAEwXP9OHi8r7TfEruCz9hvjK3g5dnZ4unBgpP7eyD9PMUrj+18TvF6GNvNNPf9/OggGQCduD
        5c1tRbg4XN6+rg8AeIL7V5L+MD+XMMOb97gheA++FgCULwDGildwQzAAqDAApCLz8xA4v4/BQAwAAID/
        RgC280FlwokR8o3buSkYAFQQANwPqjOPf6R4AzcGA4AKAkAy3CgjgBYr5xYVLBG/zM3BAKBCAODWOpty
        XttaNbEpIP/hQs19cpMwAKgEALgQsB2ngzEDgXPFL3CTMACoEAC4H5oLgaejziKDuaQHMQCoIAA4q58i
        trP0URdATJLXq8TbuGEAAABUAAAcCAgANrlLDWVKYJspwbHi63XxzwfcPAAAAPzvPX6A7eMX5msEHBAk
        Q05sIKpFQ/+uH+yzGjB8Wxc74PKzWQhzdR8A8JiWmnMvS8s7e7gbStzKdJsWyKggFK+S742SKUK97nIy
        WzwPl6XnuxtZLO7lBprmebEH6nJa7mPpeW6vdyFJmd1RJl/sZgzcD5jNMirGvQUA96zUjRBCCCGEEEII
        IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCFU4bon0GTlogln+TRLp3tjuVf1rVaqZgEPEfKnzH4JGd1E
        xWygIg/1RHl/gm62yoYUn+wTxWG5V9Xmvjn3T2xAipB/Gr/urtxR7+yrOEN8ozgnfl23T8Of7DfFm8X/
        Y4Ag4ByQ0ZFTIBDgwUKlr5Q2/mSwuUrPV3iGDSgL8qviy9Nhe0gm7I4GECp5ralrsTq6jll7lYbcJ5sT
        qy9dVxcPGABcwSgAlbJkyGq5c9eEOU+hnQZcFG/TjWd7vS8hQvtUK2vm5CPZF5mDF2i8RfN1Hxz/z87O
        1AiVdPDPBK7kgb2FRltUr8hE7INMehChkpX2/sPED9Joi+qN4klsZY38AIADxA/TaItqkxoMAgAEAAAA
        QgAAACAEAAAAQgAAACAEAAAAQvsdAMPFS83567q4BffNO8RJcS0AKK7+H7CopEPQn1vKAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>